name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF#refs/tags/} | tr '.' '_')
    - name: Build Release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Compress binary
      run: |
        tar czvf discord_bot_${{ steps.get_version.outputs.VERSION }}.tar.gz ./target/release/discord_bot
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./discord_bot_${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: discord_bot_${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip

